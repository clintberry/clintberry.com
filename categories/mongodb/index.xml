<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MongoDB on Clint Berry</title><link>https://clintberry.com/categories/mongodb/</link><description>Recent content in MongoDB on Clint Berry</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 11 Nov 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://clintberry.com/categories/mongodb/index.xml" rel="self" type="application/rss+xml"/><item><title>MongoDB Base Model for Zend Framework</title><link>https://clintberry.com/2010/mongodb-base-model-for-zend-framework/</link><pubDate>Thu, 11 Nov 2010 00:00:00 +0000</pubDate><guid>https://clintberry.com/2010/mongodb-base-model-for-zend-framework/</guid><description>&lt;p>I came accross &lt;a href="http://mongodb.org">MongoDB&lt;/a> a few months ago and it seemed like a perfect fit for many of the projects I am working. Extremely fast inserts, map-reduce for complex queries, and most importantly, scaling is a breeze.&lt;/p>
&lt;p>Since I am a Zend Framework guy I created a simple base model class for MongoDB. It is a very simple wrapper, but is effective for what I need. I usually create model classes for each “Collection” just like I would create models for each table in MySQL. Each model class extends from the new MongoDB base class and allows a low level “active directory” type access to MongoDB documents.&lt;/p></description></item></channel></rss>